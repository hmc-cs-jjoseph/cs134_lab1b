NAME: Jesse Joseph
EMAIL: jjoseph@hmc.edu
ID: 040161840


Files included:
	- client.h
		- Header file for client program. 
		- Defines functions used in client.c.
		
	- client.c
		- Defines the client program.
		- I implemented the terminal and socket communication using non-blocking IO
		- All of the non-canonical input processing happens in the client program.

	- server.h
		- Header file for the server program
		- Defines functions used in server.c

	- server.c
		- Defines the server program
		- This is mostly built from lab1a, but simplified a bit. It's not in non-canonical
		input mode anymore because the specification didn't require it to be.
		
	- Makefile
  	- Makefile has five targets: all (default), server, client, clean, and dist.
   	 - all, the default target, builds both the server and client programs
		 - server builds only the server program
		 - client builds only the client program
   	 - clean removes generated files: both server and client executables, and the tarball.
   	 - dist builds the tarball
	
	- keyfile
		- contains a random set of 16 characters that I chose to be the encryption key. I 
		chose to use the xTEA algorithm.

	- README
		- this file: an outline of this submission.

About this submission:
This submission meets all the specifications listed in the assignment (to the best of my understanding).
I wasn't sure how you wanted us to handle sharing the public initialization vector, so in my submmission,
the server and client each generate their own for their own outgoing encrypted data. The first thing
the server and client do after the initial connection is share these IVs with each other (unencrypted,
of course).

Sources, other than suggested man pages and the provided socket tutorial:
	- https://cboard.cprogramming.com/c-programming/127454-mcrypt-function.html
		- This was a useful example of the mcrypt library
	- http://beej.us/guide/bgnet/output/html/multipage/setsockoptman.html
		- This was useful to learn about setsockopt so that the server could be immediately relaunched after
		closing.
